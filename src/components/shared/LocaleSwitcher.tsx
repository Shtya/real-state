'use client'
import { routing } from '@/i18n/routing';
import { useLocale } from 'next-intl';
import { useParams, useSearchParams } from 'next/navigation';
import { usePathname, useRouter } from '@/i18n/navigation';
import { useTransition } from 'react';


export default function LocaleSwitcher() {
    const router = useRouter();
    const [isPending, startTransition] = useTransition();
    const pathname = usePathname();
    const params = useParams();
    const searchParams = useSearchParams(); // ✅ get current query string
    const currentLocale = useLocale();

    const nextLocale =
        currentLocale === routing.locales[0]
            ? routing.locales[1]
            : routing.locales[0];

    function toggleLocale() {
        startTransition(() => {
            const paramsObj: Record<string, string> = {};
            searchParams.forEach((value, key) => {
                paramsObj[key] = value;
            });

            router.replace(
                // @ts-expect-error — Next validates params at runtime
                { pathname, params, query: paramsObj }, // ✅ pass object, not string
                { locale: nextLocale }
            );
        });
    }


    return (
        <div className="">
            <button onClick={toggleLocale} className="cursor-pointer flex items-center gap-1 sm:gap-2 transition rounded-full text-base sm:text-lg md:text-xl" disabled={isPending}>
                <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg" className="w-5 h-5 lg:w-6 lg:h-6 ">
                    <path d="M14 27.3333C12.1777 27.3333 10.4555 26.9831 8.83329 26.2827C7.21107 25.5822 5.79463 24.6267 4.58396 23.416C3.37329 22.2053 2.41774 20.7889 1.71729 19.1667C1.01685 17.5444 0.666626 15.8222 0.666626 14C0.666626 12.1556 1.01685 10.428 1.71729 8.81733C2.41774 7.20667 3.37329 5.79556 4.58396 4.584C5.79463 3.37244 7.21107 2.41689 8.83329 1.71733C10.4555 1.01778 12.1777 0.667555 14 0.666666C15.8444 0.666666 17.5724 1.01689 19.184 1.71733C20.7955 2.41778 22.2062 3.37333 23.416 4.584C24.6257 5.79467 25.5813 7.20578 26.2826 8.81733C26.984 10.4289 27.3342 12.1564 27.3333 14C27.3333 15.8222 26.9831 17.5444 26.2826 19.1667C25.5822 20.7889 24.6266 22.2058 23.416 23.4173C22.2053 24.6289 20.7942 25.5844 19.1826 26.284C17.5711 26.9836 15.8435 27.3333 14 27.3333ZM14 24.6C14.5777 23.8 15.0777 22.9667 15.5 22.1C15.9222 21.2333 16.2666 20.3111 16.5333 19.3333H11.4666C11.7333 20.3111 12.0777 21.2333 12.5 22.1C12.9222 22.9667 13.4222 23.8 14 24.6ZM10.5333 24.0667C10.1333 23.3333 9.78351 22.572 9.48396 21.7827C9.1844 20.9933 8.93418 20.1769 8.73329 19.3333H4.79996C5.4444 20.4444 6.25018 21.4111 7.21729 22.2333C8.1844 23.0556 9.28974 23.6667 10.5333 24.0667ZM17.4666 24.0667C18.7111 23.6667 19.8168 23.0556 20.784 22.2333C21.7511 21.4111 22.5564 20.4444 23.2 19.3333H19.2666C19.0666 20.1778 18.8168 20.9947 18.5173 21.784C18.2177 22.5733 17.8675 23.3342 17.4666 24.0667ZM3.66663 16.6667H8.19996C8.13329 16.2222 8.08352 15.7836 8.05063 15.3507C8.01774 14.9178 8.00085 14.4676 7.99996 14C7.99907 13.5324 8.01596 13.0827 8.05063 12.6507C8.08529 12.2187 8.13507 11.7796 8.19996 11.3333H3.66663C3.55552 11.7778 3.4724 12.2169 3.41729 12.6507C3.36218 13.0844 3.33418 13.5342 3.33329 14C3.3324 14.4658 3.3604 14.916 3.41729 15.3507C3.47418 15.7853 3.55729 16.224 3.66663 16.6667ZM10.8666 16.6667H17.1333C17.2 16.2222 17.2502 15.7836 17.284 15.3507C17.3177 14.9178 17.3342 14.4676 17.3333 14C17.3324 13.5324 17.3155 13.0827 17.2826 12.6507C17.2497 12.2187 17.2 11.7796 17.1333 11.3333H10.8666C10.8 11.7778 10.7502 12.2169 10.7173 12.6507C10.6844 13.0844 10.6675 13.5342 10.6666 14C10.6657 14.4658 10.6826 14.916 10.7173 15.3507C10.752 15.7853 10.8017 16.224 10.8666 16.6667ZM19.8 16.6667H24.3333C24.4444 16.2222 24.528 15.7836 24.584 15.3507C24.64 14.9178 24.6675 14.4676 24.6666 14C24.6657 13.5324 24.6382 13.0827 24.584 12.6507C24.5297 12.2187 24.4462 11.7796 24.3333 11.3333H19.8C19.8666 11.7778 19.9168 12.2169 19.9506 12.6507C19.9844 13.0844 20.0008 13.5342 20 14C19.9991 14.4658 19.9822 14.916 19.9493 15.3507C19.9164 15.7853 19.8666 16.224 19.8 16.6667ZM19.2666 8.66667H23.2C22.5555 7.55555 21.7502 6.58889 20.784 5.76667C19.8177 4.94444 18.712 4.33333 17.4666 3.93333C17.8666 4.66667 18.2168 5.428 18.5173 6.21733C18.8177 7.00667 19.0675 7.82311 19.2666 8.66667ZM11.4666 8.66667H16.5333C16.2666 7.68889 15.9222 6.76667 15.5 5.9C15.0777 5.03333 14.5777 4.2 14 3.4C13.4222 4.2 12.9222 5.03333 12.5 5.9C12.0777 6.76667 11.7333 7.68889 11.4666 8.66667ZM4.79996 8.66667H8.73329C8.93329 7.82222 9.18351 7.00533 9.48396 6.216C9.7844 5.42667 10.1342 4.66578 10.5333 3.93333C9.28885 4.33333 8.18307 4.94444 7.21596 5.76667C6.24885 6.58889 5.44351 7.55555 4.79996 8.66667Z" fill="var(--secondary)" />
                </svg>
                <span className="hidden lg:block font-bold"> {nextLocale.toUpperCase()}</span>
            </button>
        </div>
    );
}